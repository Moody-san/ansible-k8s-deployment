- name: End Play Gracefully when already part of cluster
  meta: end_play
  when: hostvars[groups['master'][0]]['node_names'] is defined and inventory_hostname in hostvars[groups['master'][0]]['node_names']
  ignore_errors: true

- name: Stop unattended-upgrades service
  service:
    name: unattended-upgrades
    state: stopped

- name: Disable unattended-upgrades service on boot
  systemd:
    name: unattended-upgrades
    enabled: no

- name: Wait for cloud-init / user-data to finish
  command: cloud-init status --wait
  changed_when: false
    

- name: Remove Kubernetes apt repository key file
  file:
    path: /etc/apt/keyrings/kubernetes-archive-keyring*
    state: absent

- name: Remove Kubernetes repository source file
  file:
    path: /etc/apt/sources.list.d/kubernetes.list
    state: absent

- name: Update apt cache
  apt:
    update_cache: yes

- name: Upgrade all packages
  apt:
    upgrade: dist
    update_cache: yes

- name: Reboot the system
  reboot:
    reboot_timeout: 200
    pre_reboot_delay: 30
  async: 0
  poll: 0
  ignore_errors: true

- name: Wait for cloud-init / user-data to finish
  command: cloud-init status --wait
  changed_when: false

- name: Install iptables-persistent
  package:
    name: iptables-persistent
    state: present

- name: Flush iptables rules
  shell: iptables -F

- name: Allow FORWARD traffic
  shell: iptables -A FORWARD -j ACCEPT

- name: Allow INPUT traffic
  shell: iptables -A INPUT -j ACCEPT

- name: Allow OUTPUT traffic
  shell: iptables -A OUTPUT -j ACCEPT

- name: Save IPv4 iptables rules
  become_user: root
  shell: iptables-save > /etc/iptables/rules.v4

- name: Save IPv6 iptables rules
  become_user: root
  shell: ip6tables-save > /etc/iptables/rules.v6


- name: Install containerd
  apt:
    name: containerd
    state: present
    update_cache: yes

- name: Create containerd config directory
  file:
    path: /etc/containerd
    state: directory

- name: Set containerd default config
  command: containerd config default
  register: containerd_default_config

- name: Write containerd config to file
  copy:
    content: "{{ containerd_default_config.stdout }}"
    dest: /etc/containerd/config.toml
    mode: '0644'

- name: Enable SystemdCgroup in containerd config
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(\s*SystemdCgroup = )false$'
    replace: '\1true'

- name: Enable IPv4 forwarding
  replace:
    path: /etc/sysctl.conf
    regexp: '^#net\.ipv4\.ip_forward=1$'
    replace: 'net.ipv4.ip_forward=1'

- name: Add br_netfilter to modules-load.d
  lineinfile:
    path: /etc/modules-load.d/k8s.conf
    line: 'br_netfilter'
    create: yes
    state: present

- name: Reboot the system
  reboot:
    reboot_timeout: 200
    pre_reboot_delay: 30
  async: 0
  poll: 0
  ignore_errors: true

- name: Wait for cloud-init / user-data to finish
  command: cloud-init status --wait
  changed_when: false

- name: Disable swap for the current session
  command: swapoff -a
  ignore_errors: true 

- name: Create the directory
  file:
    path: /etc/apt/keyrings/
    state: directory
  become: true 

- name: Add Kubernetes apt repository key
  become: true
  become_user: ubuntu
  shell: curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

- name: Echo Kubernetes repository to sources.list.d
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    create: yes

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install Kubernetes tools
  apt:
    name:
      - kubeadm
      - kubectl
      - kubelet
    state: present
    update_cache: yes